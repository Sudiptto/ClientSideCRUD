{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\biswa\\\\Desktop\\\\Hunter\\\\Fourth Semester\\\\WebDev\\\\FinalProj\\\\ClientSideCRUD\\\\src\\\\components\\\\containers\\\\EditStudentContainer.js\";\n/*==================================================\r\nEditStudentContainer.js\r\n\r\nThe Container component is responsible for stateful logic and data fetching, and\r\npasses data (if any) as props to the corresponding View component.\r\nIf needed, it also defines the component's \"connect\" function.\r\n================================================== */\n\nimport Header from './Header';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport EditStudentView from '../views/EditStudentView';\nimport { fetchStudentThunk, editStudentThunk } from '../../store/thunks';\n\n// create a class component to handle the edit student form\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass EditStudentContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const student = {\n        id: this.props.student.id,\n        firstname: this.state.firstname,\n        lastname: this.state.lastname,\n        email: this.state.email,\n        gpa: this.state.gpa || null,\n        imageUrl: this.state.imageUrl || undefined,\n        campusId: this.state.campusId || null\n      };\n      await this.props.editStudent(student);\n      this.setState({\n        redirect: true,\n        redirectId: student.id\n      });\n    };\n    this.state = {\n      firstname: \"\",\n      lastname: \"\",\n      email: \"\",\n      gpa: \"\",\n      imageUrl: \"\",\n      campusId: \"\",\n      redirect: false,\n      redirectId: null\n    };\n  }\n\n  // Fetch the student data from the back-end database when the component mounts\n  async componentDidMount() {\n    const studentId = this.props.match.params.id;\n    await this.props.fetchStudent(studentId);\n    const {\n      firstname,\n      lastname,\n      email,\n      gpa,\n      imageUrl,\n      campus\n    } = this.props.student;\n    // set state \n    this.setState({\n      firstname,\n      lastname,\n      email,\n      gpa: gpa || \"\",\n      imageUrl: imageUrl || \"\",\n      campusId: campus ? campus.id : \"\"\n    });\n  }\n  componentWillUnmount() {\n    this.setState({\n      redirect: false,\n      redirectId: null\n    });\n  }\n\n  // render function to render the EditStudentView component\n  render() {\n    if (this.state.redirect) {\n      // afterwards reidrect back to the student page\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: `/student/${this.state.redirectId}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 14\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditStudentView, {\n        handleChange: this.handleChange,\n        handleSubmit: this.handleSubmit,\n        student: this.state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this);\n  }\n}\nconst mapState = state => ({\n  student: state.student\n});\nconst mapDispatch = dispatch => ({\n  fetchStudent: id => dispatch(fetchStudentThunk(id)),\n  editStudent: student => dispatch(editStudentThunk(student))\n});\nexport default connect(mapState, mapDispatch)(EditStudentContainer);","map":{"version":3,"names":["Header","Component","connect","Redirect","EditStudentView","fetchStudentThunk","editStudentThunk","EditStudentContainer","constructor","props","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","student","id","firstname","state","lastname","email","gpa","imageUrl","undefined","campusId","editStudent","redirect","redirectId","componentDidMount","studentId","match","params","fetchStudent","campus","componentWillUnmount","render","mapState","mapDispatch","dispatch"],"sources":["C:/Users/biswa/Desktop/Hunter/Fourth Semester/WebDev/FinalProj/ClientSideCRUD/src/components/containers/EditStudentContainer.js"],"sourcesContent":["/*==================================================\r\nEditStudentContainer.js\r\n\r\nThe Container component is responsible for stateful logic and data fetching, and\r\npasses data (if any) as props to the corresponding View component.\r\nIf needed, it also defines the component's \"connect\" function.\r\n================================================== */\r\n\r\nimport Header from './Header';\r\nimport { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport EditStudentView from '../views/EditStudentView';\r\nimport { fetchStudentThunk, editStudentThunk } from '../../store/thunks';\r\n\r\n// create a class component to handle the edit student form\r\nclass EditStudentContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      firstname: \"\",\r\n      lastname: \"\",\r\n      email: \"\",\r\n      gpa: \"\",\r\n      imageUrl: \"\",\r\n      campusId: \"\",\r\n      redirect: false,\r\n      redirectId: null,\r\n    };\r\n  }\r\n\r\n\r\n  // Fetch the student data from the back-end database when the component mounts\r\n  async componentDidMount() {\r\n    const studentId = this.props.match.params.id;\r\n    await this.props.fetchStudent(studentId);\r\n    const { firstname, lastname, email, gpa, imageUrl, campus } = this.props.student;\r\n    // set state \r\n    this.setState({\r\n      firstname,\r\n      lastname,\r\n      email,\r\n      gpa: gpa || \"\",\r\n      imageUrl: imageUrl || \"\",\r\n      campusId: campus ? campus.id : \"\",\r\n    });\r\n  } \r\n\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  // handleSubmit function to handle the form submission\r\n  handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const student = {\r\n      id: this.props.student.id,\r\n      firstname: this.state.firstname,\r\n      lastname: this.state.lastname,\r\n      email: this.state.email,\r\n      gpa: this.state.gpa || null,\r\n      imageUrl: this.state.imageUrl || undefined,\r\n      campusId: this.state.campusId || null,\r\n    };\r\n    await this.props.editStudent(student);\r\n    this.setState({\r\n      redirect: true,\r\n      redirectId: student.id,\r\n    });\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.setState({ redirect: false, redirectId: null });\r\n  }\r\n\r\n  // render function to render the EditStudentView component\r\n  render() {\r\n    if (this.state.redirect) {\r\n        // afterwards reidrect back to the student page\r\n      return <Redirect to={`/student/${this.state.redirectId}`} />;\r\n    }\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <EditStudentView\r\n          handleChange={this.handleChange}\r\n          handleSubmit={this.handleSubmit}\r\n          student={this.state}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapState = (state) => ({\r\n  student: state.student,\r\n});\r\n\r\nconst mapDispatch = (dispatch) => ({\r\n  fetchStudent: (id) => dispatch(fetchStudentThunk(id)),\r\n  editStudent: (student) => dispatch(editStudentThunk(student)),\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(EditStudentContainer);"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,MAAM,MAAM,UAAU;AAC7B,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,QAAQ,QAAQ,kBAAkB;AAE3C,OAAOC,eAAe,MAAM,0BAA0B;AACtD,SAASC,iBAAiB,EAAEC,gBAAgB,QAAQ,oBAAoB;;AAExE;AAAA;AACA,MAAMC,oBAAoB,SAASN,SAAS,CAAC;EAC3CO,WAAW,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAAC,KA8BfC,YAAY,GAAIC,KAAK,IAAK;MACxB,IAAI,CAACC,QAAQ,CAAC;QACZ,CAACD,KAAK,CAACE,MAAM,CAACC,IAAI,GAAGH,KAAK,CAACE,MAAM,CAACE;MACpC,CAAC,CAAC;IACJ,CAAC;IAAA,KAGDC,YAAY,GAAG,MAAOL,KAAK,IAAK;MAC9BA,KAAK,CAACM,cAAc,EAAE;MACtB,MAAMC,OAAO,GAAG;QACdC,EAAE,EAAE,IAAI,CAACV,KAAK,CAACS,OAAO,CAACC,EAAE;QACzBC,SAAS,EAAE,IAAI,CAACC,KAAK,CAACD,SAAS;QAC/BE,QAAQ,EAAE,IAAI,CAACD,KAAK,CAACC,QAAQ;QAC7BC,KAAK,EAAE,IAAI,CAACF,KAAK,CAACE,KAAK;QACvBC,GAAG,EAAE,IAAI,CAACH,KAAK,CAACG,GAAG,IAAI,IAAI;QAC3BC,QAAQ,EAAE,IAAI,CAACJ,KAAK,CAACI,QAAQ,IAAIC,SAAS;QAC1CC,QAAQ,EAAE,IAAI,CAACN,KAAK,CAACM,QAAQ,IAAI;MACnC,CAAC;MACD,MAAM,IAAI,CAAClB,KAAK,CAACmB,WAAW,CAACV,OAAO,CAAC;MACrC,IAAI,CAACN,QAAQ,CAAC;QACZiB,QAAQ,EAAE,IAAI;QACdC,UAAU,EAAEZ,OAAO,CAACC;MACtB,CAAC,CAAC;IACJ,CAAC;IApDC,IAAI,CAACE,KAAK,GAAG;MACXD,SAAS,EAAE,EAAE;MACbE,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,GAAG,EAAE,EAAE;MACPC,QAAQ,EAAE,EAAE;MACZE,QAAQ,EAAE,EAAE;MACZE,QAAQ,EAAE,KAAK;MACfC,UAAU,EAAE;IACd,CAAC;EACH;;EAGA;EACA,MAAMC,iBAAiB,GAAG;IACxB,MAAMC,SAAS,GAAG,IAAI,CAACvB,KAAK,CAACwB,KAAK,CAACC,MAAM,CAACf,EAAE;IAC5C,MAAM,IAAI,CAACV,KAAK,CAAC0B,YAAY,CAACH,SAAS,CAAC;IACxC,MAAM;MAAEZ,SAAS;MAAEE,QAAQ;MAAEC,KAAK;MAAEC,GAAG;MAAEC,QAAQ;MAAEW;IAAO,CAAC,GAAG,IAAI,CAAC3B,KAAK,CAACS,OAAO;IAChF;IACA,IAAI,CAACN,QAAQ,CAAC;MACZQ,SAAS;MACTE,QAAQ;MACRC,KAAK;MACLC,GAAG,EAAEA,GAAG,IAAI,EAAE;MACdC,QAAQ,EAAEA,QAAQ,IAAI,EAAE;MACxBE,QAAQ,EAAES,MAAM,GAAGA,MAAM,CAACjB,EAAE,GAAG;IACjC,CAAC,CAAC;EACJ;EA2BAkB,oBAAoB,GAAG;IACrB,IAAI,CAACzB,QAAQ,CAAC;MAAEiB,QAAQ,EAAE,KAAK;MAAEC,UAAU,EAAE;IAAK,CAAC,CAAC;EACtD;;EAEA;EACAQ,MAAM,GAAG;IACP,IAAI,IAAI,CAACjB,KAAK,CAACQ,QAAQ,EAAE;MACrB;MACF,oBAAO,QAAC,QAAQ;QAAC,EAAE,EAAG,YAAW,IAAI,CAACR,KAAK,CAACS,UAAW;MAAE;QAAA;QAAA;QAAA;MAAA,QAAG;IAC9D;IACA,oBACE;MAAA,wBACE,QAAC,MAAM;QAAA;QAAA;QAAA;MAAA,QAAG,eACV,QAAC,eAAe;QACd,YAAY,EAAE,IAAI,CAACpB,YAAa;QAChC,YAAY,EAAE,IAAI,CAACM,YAAa;QAChC,OAAO,EAAE,IAAI,CAACK;MAAM;QAAA;QAAA;QAAA;MAAA,QACpB;IAAA;MAAA;MAAA;MAAA;IAAA,QACE;EAEV;AACF;AAEA,MAAMkB,QAAQ,GAAIlB,KAAK,KAAM;EAC3BH,OAAO,EAAEG,KAAK,CAACH;AACjB,CAAC,CAAC;AAEF,MAAMsB,WAAW,GAAIC,QAAQ,KAAM;EACjCN,YAAY,EAAGhB,EAAE,IAAKsB,QAAQ,CAACpC,iBAAiB,CAACc,EAAE,CAAC,CAAC;EACrDS,WAAW,EAAGV,OAAO,IAAKuB,QAAQ,CAACnC,gBAAgB,CAACY,OAAO,CAAC;AAC9D,CAAC,CAAC;AAEF,eAAehB,OAAO,CAACqC,QAAQ,EAAEC,WAAW,CAAC,CAACjC,oBAAoB,CAAC"},"metadata":{},"sourceType":"module"}